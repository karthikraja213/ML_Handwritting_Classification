# -*- coding: utf-8 -*-
"""Handwriting digit classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WNEE_46rHbHkyxswKAaTBdAEvO6uhx6b
"""

# Commented out IPython magic to ensure Python compatibility.
import tensorflow as tf
from tensorflow import keras

import matplotlib.pyplot as plt
# %matplotlib inline
import numpy as np

#download data
(x_train, y_train),(x_test,y_test)=keras.datasets.mnist.load_data()

len(y_train)

len(y_test)

x_train[2].shape

x_train[2]

x_train=x_train/255
x_test=x_test/255

y_train[0]

x_train_flattened=x_train.reshape(len(x_train),28*28)
x_test_flattened=x_test.reshape(len(x_test),28*28)

x_train_flattened.shape

#Simple neural network w/o hidden layers
model=keras.Sequential([
    keras.layers.Dense(10,input_shape=(784,),activation='sigmoid')
])

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

model.fit(x_train_flattened, y_train, epochs=5)

model.evaluate(x_test_flattened,y_test)

y_predicted=model.predict(x_test_flattened)
y_predicted[4]

np.argmax(y_predicted[4])

plt.matshow(x_test[4])